0.如果无法将本地仓库同步到github上的远程仓库，在cmd执行下面两行命令，再重启vscode，如果不成功就多试几次
    git config --global --unset http.proxy
    git config --global --unset https.proxy

1.exit()和return的区别
    main函数中无区别，在其它函数中，return结束当前函数，exit结束当前进程
    参数0表示正常退出，-1表示异常退出

2.void EXIT(int sig)
    程序的退出函数，不直接使用exit退出，而是封装成一个函数，目的如下：
    1.日志记录程序退出
    2.释放资源（大部分资源的释放都是通过析构函数执行，这里一般不用考虑）
    3.通知子线程退出
    4.作为退出信号（2，15）的处理函数

3.远程连接数据库与数据库链路(dblink)
    (1) 远程连接数据库需要在$ORACLE_HOME/network/admin/tnsnames.ora文件中配置远程数据库参数（ip、端口、服务名等）
        连接数据库时向connection对象的connectodb函数传入参数：用户名/密码@远程数据库服务名
        即可通过connection对象远程操纵数据库
    (2) 数据库链路(dblink)是本地数据库与远程数据库之间通道
        在本地数据库上建立对远程数据库的链路，在本地数据库中可以直接访问远程数据库的对象

4.所有涉及二进制数据的IO，一定要记得传入buffer的长度，如果忘记了将很难排错

5.访问数据库前，记得开启数据库服务
    (1) lsnrctl start   开启网络服务，允许本地数据库被远程访问
    (2) dbstart         开启数据库服务，需要切换到oracle用户
  关机前记得关闭对应服务
    (1) lsnrctl stop
    (2) dbshut

6.建立数据库连接后，默认不自动提交，所以对于插入、更新、删除操作，记得要提交
  如果sql语句执行出错了，在数据库连接对象的析构函数中会执行事务回滚

7.sql语句执行失败时对应的代码（rc()函数返回错误代码，0表示成功）
    1       违反唯一性约束
    942     表不存在
    3113    通信通道的文件结尾
    3114    未连接到ORACLE
    3115    连接失去联系
    16014   归档失败

8.update语句对应的记录如果不存在不会返回失败，需要通过rpc()函数获取影响的记录数
  select语句查询不到记录也不会返回失败，next()获取记录会返回失败
    另外，select查询到记录后rpc()不会返回记录数，而是成功执行一次next()函数就让rpc加1

9.表的设计
    (1) 对于一种数据，应当设计对应的主表、历史表、业务表
        主表负责管理数据，支持增删改查
        历史表存放过时的数据，从主表迁移而来（降低主表的数据量以提高效率）
        业务表只支持查询，外部访问数据只能通过业务表（提高效率，同时增加安全性）
        业务从主表同步而来，同时可以根据业务需求处理数据，例如只同步对外开放的数据
    (2) 操作耗时：修改 > 删除 > 增加 > 查询
        数据量大的表应尽量避免修改和删除操作
